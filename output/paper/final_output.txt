<image_1>
Page 7
{image_1_description: Figure 1: Schematics of Variational PINNs for a 2D Poisson problem.}

<image_2>
Page 8
{image_2_description: Figure 2: hp-VPINNs: Effect of training time on Number of elements (a) Number of residual points vs training time.(Each element has 25 quadrature points, so 30K quadrature points will have 1200 elements).(b) Number of elements vs training time(total number of quadrature points within the domain is kept constant at 6400).}

<image_3>
Page 8
{image_3_description: Figure 3: Mesh of spur gear with 14,000 quad elements.}

<image_4>
Page 9
{image_4_description: Figure 4: Bilinear transformation.}

<image_5>
Page 11
{image_5_description: Figure 5: Quadrilateral meshes with elements having constant Jacobian.}

<image_6>
Page 12
{image_6_description: Figure 6: FastVPINNs Tensor schematic representation for residual computation.}

<image_7>
Page 14
{image_7_description: Figure 7: Exact solutions of the two-dimensional Poisson's equation for given test-cases.}

<image_8>
Page 15
{image_8_description: Figure 8: Accuracy comparison between PINNs and FastVPINNs. The quadrature points used to train FastVPINNs are shown in (a). The FastVPINNs prediction is shown in (b) and the point-wise error for the FastVPINNs solution is shown in (c). The PINNs is trained on collocation points as shown in (d). The PINNs solution and point-wise error are shown in (e) and (f), respectively.}

<image_9>
Page 16
{image_9_description: Figure 9: Left: Effect of p-refinement(left) and h-refinement(right) on FastVPINNs.}

<image_10>
Page 17
{image_10_description: Figure 10: (a) Variation of computational time with the number of quadrature (residual) points, plotted against the median time taken per epoch; (b) Comparison of computational time between hp-VPINNs and FastVPINNs for varying numbers of elements.}

<image_11>
Page 18
{image_11_description: Figure 11: (a) Comparing MAE for PINNs and FastVPINNs over different frequencies. (b) time taken for PINNs and FastVPINNs to reach an MAE of 5 × 10 -2 for different frequencies.}

<image_12>
Page 19
{image_12_description: Figure 12: (a) Exact Solution obtained using FEM. (b) Predicted solution-FastVPINNs (c) Pointwise absolute error.}

<image_13>
Page 20
{image_13_description: Figure 13: Schematics of VPINNs for space dependent inverse parameter modelling.}

<image_14>
Page 21
{image_14_description: Figure 14: Inverse problem on FastVPINNs with constant diffusion parameter.}

<image_15>
Page 22
{image_15_description: Figure 15: (a) Exact solution( u ) obtained from FEM(ParMooN). (b) Predicted SolutionFastVPINNs. (c) Absolute error: FEM vs FastVPINNs solution. (d) Exact solution diffusion parameter( ϵ actual ). (e) Predicted diffusion parameter by FastVPINNs( ϵ predicted ) (f) Absolute error: ϵ actual vs ϵ predicted .}

<image_16>
Page 23
{image_16_description: Figure 16: Comparative analysis of the median training time per epoch for different hyperparameters: (a) Number of test functions ( N test ) vs Number of quadrature points ( N quad) with ( N elem =1), (b) Number of Elements ( N elem ) vs Number of test functions ( N test ) with quadrature points fixed at 10x10 ( N quad =10*10), (c) Number of elements ( N elem ) vs Number of quadrature points ( N quad ) with fixed number of test functions ( N test =10*10).}

<image_17>
Page 23
{image_17_description: Figure 16: Comparative analysis of the median training time per epoch for different hyperparameters: (a) Number of test functions ( N test ) vs Number of quadrature points ( N quad) with ( N elem =1), (b) Number of Elements ( N elem ) vs Number of test functions ( N test ) with quadrature points fixed at 10x10 ( N quad =10*10), (c) Number of elements ( N elem ) vs Number of quadrature points ( N quad ) with fixed number of test functions ( N test =10*10).}

<image_18>
Page 23
{image_18_description: Figure 16: Comparative analysis of the median training time per epoch for different hyperparameters: (a) Number of test functions ( N test ) vs Number of quadrature points ( N quad) with ( N elem =1), (b) Number of Elements ( N elem ) vs Number of test functions ( N test ) with quadrature points fixed at 10x10 ( N quad =10*10), (c) Number of elements ( N elem ) vs Number of quadrature points ( N quad ) with fixed number of test functions ( N test =10*10).}

<image_19>
Page 29
{image_19_description: Figure 17: Effect of h-refinement on the accuracy of solving the two-dimensional Poisson equation. The first, second, and third columns are the domain decomposition, FastVPINNs solution, and pointwise test error, respectively. From top to bottom: N elem = 1, N elem = 16 and N elem = 64. For each element, we use 80 × 80 quadrature points and 5 test functions in each direction.}

<image_20>
Page 30
{image_20_description: Figure 18: Effect of p-refinement on the accuracy of solution of two-dimensional Poisson's equation on 1 element. The first and second columns are the FastVPINNs solution and point-wise test error, respectively. From top to bottom: N test = 5 × 5, N test = 10 × 10, N test = 15 × 15 and N test = 20 × 20. The element has 80 × 80 total quadrature points.}

<image_21>
Page 31
{image_21_description: Figure 19: Comparision of time taken for prediction by FEM and PINNs for varying number of quadrature points.}

<table_1>
{table_1_text: ./output/paper/tables/table_1.txt}

